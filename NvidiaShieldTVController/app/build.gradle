apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


// Whether to use home assistant.
//
// If true, sends an event "nvidia_shield_tv_request" with the data json payload:
// {"command": "${HA_COMMAND}"}
//
// HA_COMMAND is defined below per product variant.

def readHomeAssistantToken() {
    if (!project.properties['USE_HOME_ASSISTANT']) {
        return ""
    }

    try {
        lines = new File("$project.rootDir/home_assistant.token").readLines()
        return lines[0]
    } catch (FileNotFoundException ignored) {
        println("*** Missing home_assistant.token file ****")
    }
}

android {
    defaultConfig {
        applicationId "com.ashbreeze.shield_tv_controller"
        compileSdk 34
        minSdkVersion 28
        //noinspection ExpiredTargetSdkVersion Max SDK Version for Nvidia Shield is 28.
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        // whether to log keypresses to logcat for mapping new controller buttons
        buildConfigField "boolean", "LOG_INPUT_KEYCODES", "false"


        buildConfigField "boolean", "USE_HOME_ASSISTANT", "${project.properties['USE_HOME_ASSISTANT']}"
        buildConfigField "String", "HA_IP_ADDRESS", "\"${project.properties['HA_IP_ADDRESS']}\""
        buildConfigField "int", "HA_PORT", "${project.properties['HA_PORT']}"
        buildConfigField "String", "HA_TOKEN", "\"${readHomeAssistantToken()}\""


        // If not using Home Assistant, will use this IP / Port and directly send telnet command to select
        // the given input.
        buildConfigField "String", "TV_IP_ADDRESS", "\"${project.properties['TV_DIRECT_ACCESS_ADDRESS']}\""
        buildConfigField "int", "TV_PORT", "${project.properties['TV_DIRECT_ACCESS_PORT']}"
        buildConfigField "boolean", "IS_SHIELD", "false"
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    flavorDimensions += "application_selection"
    productFlavors {
        // main also contains the accessibility service for using the netflix button
        // to return to the shield.
        shield {
            dimension "application_selection"
            applicationIdSuffix ".shield"
            versionNameSuffix "-shield"
            manifestPlaceholders = [
                    appPrefix: "shield",
                    launcherName: "Shield TV Control",
            ]
            buildConfigField "String", "HA_COMMAND", "\"shield\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi1\""
            buildConfigField "boolean", "IS_SHIELD", "true"
        }
        speaker {
            dimension "application_selection"
            applicationIdSuffix ".speaker"
            versionNameSuffix "-speaker"
            manifestPlaceholders = [
                    appPrefix: "speaker",
                    launcherName: "Speaker",
            ]
            buildConfigField "String", "HA_COMMAND", "\"speaker\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi2\""
        }
        nintendo_switch {
            dimension "application_selection"
            applicationIdSuffix ".switch"
            versionNameSuffix "-switch"
            manifestPlaceholders = [
                    appPrefix: "switch",
                    launcherName: "Nintendo Switch",
            ]
            buildConfigField "String", "HA_COMMAND", "\"switch\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi3\""
        }
        pc {
            dimension "application_selection"
            applicationIdSuffix ".pc"
            versionNameSuffix "-pc"
            manifestPlaceholders = [
                    appPrefix: "pc",
                    launcherName: "PC",
            ]
            buildConfigField "String", "HA_COMMAND", "\"pc\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi3\""
        }
        playstation {
            dimension "application_selection"
            applicationIdSuffix ".playstation"
            versionNameSuffix "-playstation"
            manifestPlaceholders = [
                    appPrefix: "playstation",
                    launcherName: "Playstation 4",
            ]
            buildConfigField "String", "HA_COMMAND", "\"ps4\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi2\""
        }
        ps5 {
            dimension "application_selection"
            applicationIdSuffix ".ps5"
            versionNameSuffix "-ps5"
            manifestPlaceholders = [
                    appPrefix: "ps5",
                    launcherName: "Playstation 5",
            ]
            buildConfigField "String", "HA_COMMAND", "\"ps5\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi4\""
        }
        xbox {
            dimension "application_selection"
            applicationIdSuffix ".xbox"
            versionNameSuffix "-xbox"
            manifestPlaceholders = [
                    appPrefix: "xbox",
                    launcherName: "Xbox One",
            ]
            buildConfigField "String", "HA_COMMAND", "\"xbox-one\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi4\""
        }
        game {
            dimension "application_selection"
            applicationIdSuffix ".game"
            versionNameSuffix "-game"
            manifestPlaceholders = [
                    appPrefix: "game",
                    launcherName: "Game Console",
            ]
            buildConfigField "String", "HA_COMMAND", "\"game-console\""
            buildConfigField "String", "SELECT_INPUT_PARAMS", "\"hdmi4\""
        }
    }
    namespace 'com.ashbreeze.shield_tv_controller'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.leanback:leanback:1.0.0'

    implementation 'commons-net:commons-net:3.6'
    implementation 'commons-io:commons-io:2.13.0'
}

name: Build Release APKs

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && github.event.base_ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Extract tag name
        id: tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Decode keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > release.keystore

      - name: Build all release APKs
        env:
          RELEASE_KEYSTORE_PATH: ${{ github.workspace }}/release.keystore
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
        working-directory: NvidiaShieldTVController
        run: ./gradlew assembleRelease

      - name: Upload Shield TV APK
        uses: actions/upload-artifact@v4
        with:
          name: app-shield-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/shield/release/app-shield-release.apk

      - name: Upload Speaker APK
        uses: actions/upload-artifact@v4
        with:
          name: app-speaker-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/speaker/release/app-speaker-release.apk

      - name: Upload Nintendo Switch APK
        uses: actions/upload-artifact@v4
        with:
          name: app-nintendo_switch-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/nintendo_switch/release/app-nintendo_switch-release.apk

      - name: Upload PC APK
        uses: actions/upload-artifact@v4
        with:
          name: app-pc-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/pc/release/app-pc-release.apk

      - name: Upload PS4 APK
        uses: actions/upload-artifact@v4
        with:
          name: app-ps4-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/ps4/release/app-ps4-release.apk

      - name: Upload PS5 APK
        uses: actions/upload-artifact@v4
        with:
          name: app-ps5-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/ps5/release/app-ps5-release.apk

      - name: Upload Xbox One APK
        uses: actions/upload-artifact@v4
        with:
          name: app-xboxone-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/xboxone/release/app-xboxone-release.apk

      - name: Upload Game Console APK
        uses: actions/upload-artifact@v4
        with:
          name: app-gameconsole-release.apk
          path: NvidiaShieldTVController/app/build/outputs/apk/gameconsole/release/app-gameconsole-release.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            NvidiaShieldTVController/app/build/outputs/apk/shield/release/app-shield-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/speaker/release/app-speaker-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/nintendo_switch/release/app-nintendo_switch-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/pc/release/app-pc-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/ps4/release/app-ps4-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/ps5/release/app-ps5-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/xboxone/release/app-xboxone-release.apk
            NvidiaShieldTVController/app/build/outputs/apk/gameconsole/release/app-gameconsole-release.apk
          draft: true
          prerelease: false
          generate_release_notes: true

      - name: Clean up keystore
        if: always()
        run: rm -f release.keystore
